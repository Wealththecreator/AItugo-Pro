import React, { useState } from 'react';
import { CopyIcon, CheckIcon, LightBulbIcon, DownloadIcon, ArchiveBoxIcon } from './icons';
import { Format } from '../types';

interface OutputActionsProps {
  captions: string[];
  hashtags: string[];
  nextTopicSuggestion: string;
  format: Format;
  isDownloading: boolean;
  onDownloadPNG: () => void;
  onDownloadPDF: () => void;
  onDownloadZIP: () => void;
}

const CopyableItem: React.FC<{ text: string }> = ({ text }) => {
  const [copied, setCopied] = useState(false);

  const handleCopy = () => {
    navigator.clipboard.writeText(text);
    setCopied(true);
    setTimeout(() => setCopied(false), 2000);
  };

  return (
    <div className="flex items-center justify-between bg-slate-50 p-3 rounded-lg border border-slate-200 hover:border-slate-300 transition-colors">
      <p className="text-sm text-slate-700 mr-4">{text}</p>
      <button onClick={handleCopy} className="p-1.5 rounded-md hover:bg-slate-200 transition-colors focus:outline-none focus:ring-2 focus:ring-brand-orange">
        {copied ? <CheckIcon className="w-5 h-5 text-green-500" /> : <CopyIcon className="w-5 h-5 text-slate-500" />}
      </button>
    </div>
  );
};

export const OutputActions: React.FC<OutputActionsProps> = ({ 
  captions, 
  hashtags, 
  nextTopicSuggestion,
  format,
  isDownloading,
  onDownloadPNG,
  onDownloadPDF,
  onDownloadZIP
}) => {
  const isVisualFormat = format === 'Carousel' || format === 'Story' || format === 'Thread';
  
  return (
    <div className="space-y-6">
      {/* Captions */}
      <div className="bg-white p-6 rounded-2xl shadow-sm border border-slate-200">
        <h3 className="text-lg font-bold text-slate-900 tracking-tight mb-4">Viral Captions</h3>
        <div className="space-y-3">
          {captions.map((caption, index) => (
            <CopyableItem key={index} text={caption} />
          ))}
        </div>
      </div>
      
      {/* Hashtags */}
      <div className="bg-white p-6 rounded-2xl shadow-sm border border-slate-200">
        <h3 className="text-lg font-bold text-slate-900 tracking-tight mb-4">Suggested Hashtags</h3>
        <div className="flex flex-wrap gap-2">
          {hashtags.map((tag, index) => (
            <span key={index} className="px-3 py-1 bg-orange-100 text-brand-orange text-sm font-semibold rounded-full">#{tag.replace(/#/g, '')}</span>
          ))}
        </div>
      </div>

      {/* Next Topic */}
      <div className="bg-orange-50/50 border-l-4 border-brand-orange p-5 rounded-r-lg">
        <div className="flex">
          <div className="flex-shrink-0 pt-0.5">
            <LightBulbIcon className="h-6 w-6 text-brand-orange" aria-hidden="true" />
          </div>
          <div className="ml-4">
            <p className="text-base font-bold text-orange-900">Next Viral Topic</p>
            <p className="mt-1 text-sm text-orange-800">{nextTopicSuggestion}</p>
          </div>
        </div>
      </div>
      
      {/* Download Buttons */}
      {isVisualFormat && (
        <div className="bg-white p-6 rounded-2xl shadow-sm border border-slate-200">
          <h3 className="text-lg font-bold text-slate-900 tracking-tight mb-3">Download Assets</h3>
          <p className="text-sm text-slate-500 mb-4">Download your high-resolution assets generated by the AI.</p>
          <div className="flex flex-col sm:flex-row gap-4 flex-wrap">
            <button onClick={onDownloadPNG} disabled={isDownloading} className="w-full sm:w-auto flex items-center justify-center gap-2 px-5 py-2.5 bg-slate-800 text-white font-semibold rounded-lg hover:bg-slate-700 transition-colors focus:outline-none focus:ring-2 focus:ring-slate-800 focus:ring-offset-2 disabled:bg-slate-400 disabled:cursor-wait">
              <DownloadIcon className="w-5 h-5" />
              {isDownloading ? 'Processing...' : 'Download PNG'}
            </button>
            <button onClick={onDownloadPDF} disabled={isDownloading} className="w-full sm:w-auto flex items-center justify-center gap-2 px-5 py-2.5 bg-slate-100 text-slate-800 font-semibold rounded-lg hover:bg-slate-200 transition-colors focus:outline-none focus:ring-2 focus:ring-slate-500 focus:ring-offset-2 disabled:bg-slate-300 disabled:cursor-wait">
              <DownloadIcon className="w-5 h-5" />
              {isDownloading ? 'Processing...' : 'Download PDF'}
            </button>
            <button onClick={onDownloadZIP} disabled={isDownloading} className="w-full sm:w-auto flex items-center justify-center gap-2 px-5 py-2.5 bg-slate-100 text-slate-800 font-semibold rounded-lg hover:bg-slate-200 transition-colors focus:outline-none focus:ring-2 focus:ring-slate-500 focus:ring-offset-2 disabled:bg-slate-300 disabled:cursor-wait">
              <ArchiveBoxIcon className="w-5 h-5" />
              {isDownloading ? 'Processing...' : 'Download ZIP'}
            </button>
          </div>
        </div>
      )}

    </div>
  );
};